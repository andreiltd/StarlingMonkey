name: Deploy mdbook documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    outputs:
      dirs: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            docs: docs/**

  deploy:
    needs: [changes]
    if: ${{ !contains(needs.changes.outputs.dirs, '[]') }}
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - uses: actions/checkout@v4

      - name: Install latest mdbook
        run: |
          tag=$(curl 'https://api.github.com/repos/rust-lang/mdbook/releases/latest' | jq -r '.tag_name')
          url="https://github.com/rust-lang/mdbook/releases/download/${tag}/mdbook-${tag}-x86_64-unknown-linux-gnu.tar.gz"
          mkdir mdbook
          curl -sSL $url | tar -xz --directory=./mdbook
          echo `pwd`/mdbook >> $GITHUB_PATH

      - name: Build mdbook
        working-directory: ./docs
        run: mdbook build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/book
          keep_files: true

  link_check:
    name: Verify links after deployment
    needs: [deploy]
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      contents: read
      issues: write
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Wait for GitHub Pages to update
        run: sleep 120

      - name: Check all links on docs
        uses: lycheeverse/lychee-action@1d97d84f0bc547f7b25f4c2170d87d810dc2fb2c # v2.4.0
        with:
          fail: true
          format: markdown
          jobSummary: true

      - name: Setup GitHub CLI
        if: ${{ failure() }}
        uses: cli/setup-gh@v1

      - name: Create or update issue on link check failure
        if: ${{ failure() }}
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Set date variable
          TODAY=$(date +"%Y-%m-%d")

          # Define URLs for reuse
          WORKFLOW_URL="https://github.com/$REPO/actions/runs/$RUN_ID"

          # Find existing issues
          EXISTING_ISSUE=$(gh issue list \
            --repo $REPO \
            --label broken-links \
            --state open \
            --json number \
            --jq ".[0].number")

          # Create issue body
          read -r -d '' ISSUE_BODY << EOM
          # Broken Links Report ($TODAY)

          Link check has detected broken links on the documentation website.
          Please see the [link checker workflow run]($WORKFLOW_URL) for details.

          > This issue was automatically generated from the link checker workflow.
          EOM

          # Create comment text
          read -r -d '' COMMENT_TEXT << EOM
          New broken links were detected in the workflow run on $TODAY.
          Please check the latest workflow run for details: $WORKFLOW_URL
          EOM

          # Create or update issue based on existing issues
          if [ -n "$EXISTING_ISSUE" ]; then
            gh issue comment $EXISTING_ISSUE \
              --repo $REPO \
              --body "$COMMENT_TEXT"
          else
            gh issue create --repo $REPO \
              --title "Broken links detected on documentation website" \
              --body "$ISSUE_BODY" \
              --label documentation \
              --label broken-links
          fi
